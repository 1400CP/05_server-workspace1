package com.kh.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class RequestGetServlet
 */
@WebServlet("/test1.do")
public class RequestGetServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RequestGetServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//GET 방식으로 요청시 해당 이 doGet 메소드가 저절로 호출됨
//		System.out.println("이거 진짜 되나???");
		/*
		 * 첫번째 매개변수인 request에는 요청시 전달된 내용들 담겨있음
		 * (사용자가 입력한 값, 요청전송방식, 요청자의 ip주소 등등)
		 * 두번째 매개변수인 response에는 요청 처리 후 응답할 때 사용되는 객체
		 * 
		 * 요청 처리를 위해서 요청시 전달된 값 뽑기
		 * request의 parameter 영역 안에 존재 (key - value 세트로 담겨있는 주머니)
		 * 
		 * 따라서 request의 parameter 영역으로부터 전달된 데이터 뽑는 메소드
		 * > request.getParameter("키값") : String(반환)
		 * 
		 * food="분식"&food="분식" 과 같이 2개 이상인 경우
		 * > request.getParameterValues("키값") : String[]
		 * 
		 */
		
		String name = request.getParameter("name"); // "차은우" | "" (공백이 오는 것임)
		String gender = request.getParameter("gender"); // "M" | "F" | null
		int age = Integer.parseInt(request.getParameter("age")); // "20" => 20 | (입력값이 없으면 error가 남)
//		NumberFormatException : 빈문자열 숫자로 변환 불가
		String city = request.getParameter("city");
		double height = Double.parseDouble(request.getParameter("height")); // "160" => 160
		
		// 체크박스와 같이 복수개의 밸류값들을 뽑고자 할 때
		String[] foods = request.getParameterValues("food"); // ["한식", "중식"] | null
		
		System.out.println("name : " + name);
		System.out.println("gender : " + gender);
		System.out.println("age : " + age);
		System.out.println("city : " + city);
		System.out.println("height : " + height);
		
		System.out.println("foods : " + foods); // 아마 주소값 나올 것임
//		System.out.println("foods : " + foods[0]);
		// Cannot load from object array because "foods" is null => 에러 발생
	
		if(foods == null) {
			System.out.println("foods : 없음");
		}else {
			System.out.println("foods : " + String.join("/", foods));
			// 배열에 있는 값들을 /로 나눠줌
			// 반복문을 안 돌리고도 나눠줄 수 있는 방법임.
		}
		
		// 뽑아낸 값(요청시 전달된 값)들을 가지고 요청처리 해야 됨
		// (db와 상호작용 : 조회, 삽입, 수정 ,삭제...)
		// > Service 메소드 호출 > Dao 메소드 호출 > DB에 SQL문 실행
		
		int result = new MemberService().insertMember(name,gender,age,city,height,foods);
		
	
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
