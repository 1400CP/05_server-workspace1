package com.kh.cotroller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class PizzaServlet
 */
@WebServlet("/confirmPizza.do")
public class PizzaServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public PizzaServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
//		System.out.println("잘 요청됐나?");
		// 1) 전달값 중에 한글이 있을 경우 인코딩 처리 (post 방식일 때만)
//		request.setCharacterEncoding("UTF-8");
		
		// 2) 요청시 전달값 뽑기 및 데이터 가공처리(파싱 같은 거) == 변수 및 객체 기록
//		request.getParameter("키값") : "밸류값" (String)
//		request.getParameterValues("키값") : ["벨류값", "벨류값", ..] (String[])
//		=> 만일 키값이 존재하지 않을 경우 null 반환
		
		// 미션 : 요청시 전달값들 다 뽑아서 변수에 기록해놓기 (변수명은 jsp의 name값과 똑같이)
		// 			콘솔에 값 출력 => 8개 값!
		
		String username = request.getParameter("username"); // "차은우"
		String phone = request.getParameter("phone"); // "01055559999"
		String address = request.getParameter("address"); // "서울시 강남구"
		String message = request.getParameter("message"); // "감사합니다" | ""
		
		String pizza = request.getParameter("pizza"); // "콤비네이션" - 첫빠따 | "치즈피자"
		
		String[] toppings = request.getParameterValues("topping"); // ["고구마무스", 치즈바이트"] | null
		String[] sides = request.getParameterValues("side"); // ["핫소스", "피클"] | null
		
		String payment = request.getParameter("payment"); // "card" | "cash"
		
		
		System.out.println(username);
		System.out.println(phone);
		System.out.println(address);
		System.out.println(message);
		
		System.out.println(pizza);
		
		if(toppings == null) {
			System.out.println("없음");
		}else {
			System.out.println("topping : " + String.join(",", toppings));
		}
		
		if(sides == null) {
			System.out.println("없음");
		}else {
			System.out.println("side : " + String.join("|", sides));
		}
		
		System.out.println(payment);
		
		
		// 3) 요청 처리 (db에 sql문 실행하러 > service > dao)
		
		int price = 0;
		
		switch(pizza) {
		case "콤비네이션" : price += 5000; break;
		case "치즈" : price += 6000; break;
		case "포테이토" : 
		case "고구마" : price += 7000; break;
		case "불고기" : price += 8000; break;
		}
		
		if(toppings != null) { // 토핑이 null이 아닐 경우에만 돌려
			for(int i=0;i<toppings.length; i++) { // ["콘크림무스", "치즈바이트"]
				switch(toppings[i]) {
				case "고구마무스" : 
				case "콘크림무스" : price += 1500; break;
				case "파인애플토핑" : 
				case "치즈토핑" : price += 2000; break;
				case "치즈바이트" : 
				case "치즈크러스트" : price += 3000; break;
				}
			}
		}
		
		if(sides != null) { // 사이드가 null이 아닐때만 돌리기
			for(int i=0; i<sides.length; i++) {
				switch(sides[i]) {
				case "콜라" :
				case "사이다" : price += 2000; break;
				case "핫소스" : 
				case "갈릭소스" : price += 300; break;
				case "피클" :
				case "파마산치즈가루" : price += 500; break;
				}
			}
		}
		
		// 4) 요청 처리 후 사용자가 보게 될 응답페이지 (결제페이지) 만들기
//			응답페이지(jsp)를 선택해서 포워딩
//			단, 응답페이지에서 필요한 데이터가 있다면 담아서 포워딩할 것!
//			request > attribute 라는 영역, 공간에 담아서 가야함
//			(모르겠으면 먼저, jsp를 만들고 담아라)
		
		request.setAttribute("userName", username);		// 오타조심~
		request.setAttribute("phone", phone);
		request.setAttribute("address", address);
		request.setAttribute("message", message);
		request.setAttribute("pizza", pizza);
		request.setAttribute("toppings", toppings);
		request.setAttribute("sides", sides);
		request.setAttribute("payment", payment);
		request.setAttribute("price", price);
		
		// 이제 응답할 view, jsp 선택해야 한다.
//		request.getRequestDispatcher(jsp의 경로!!) - 일단 외워
		RequestDispatcher view = request.getRequestDispatcher("views/pizza/pizzaPayment.jsp");
//		view에는 응답하려고 하는 jsp가 들어가 있음
		
		// 오타가 날 경우 404 에러.
		// ctrl + shift + R로 확인해보면 경로 오류인지 확인할 수 있음.
		
//		jsp로 날아가도록 해야 함.
		view.forward(request, response);
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
